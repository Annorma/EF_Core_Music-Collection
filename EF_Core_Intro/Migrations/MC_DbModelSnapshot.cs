// <auto-generated />
using EF_Core_Intro;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EF_Core_Intro.Migrations
{
    [DbContext(typeof(MC_Db))]
    partial class MC_DbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EF_Core_Intro.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenreName");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("EF_Core_Intro.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryName");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("EF_Core_Intro.Category", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Name = "Sad Songs"
                        },
                        new
                        {
                            Name = "Dance Mucic"
                        },
                        new
                        {
                            Name = "1990's"
                        },
                        new
                        {
                            Name = "Top 2021"
                        });
                });

            modelBuilder.Entity("EF_Core_Intro.Country", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Counties");

                    b.HasData(
                        new
                        {
                            Name = "USA"
                        },
                        new
                        {
                            Name = "Ukraine"
                        },
                        new
                        {
                            Name = "France"
                        },
                        new
                        {
                            Name = "Mexico"
                        });
                });

            modelBuilder.Entity("EF_Core_Intro.Genre", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Name = "Rock"
                        },
                        new
                        {
                            Name = "Pop"
                        },
                        new
                        {
                            Name = "Instrumental"
                        },
                        new
                        {
                            Name = "Folk"
                        });
                });

            modelBuilder.Entity("EF_Core_Intro.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Songs")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("EF_Core_Intro.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Album")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("EF_Core_Intro.Album", b =>
                {
                    b.HasOne("EF_Core_Intro.Genre", "Genre")
                        .WithMany("Albums")
                        .HasForeignKey("GenreName");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("EF_Core_Intro.Artist", b =>
                {
                    b.HasOne("EF_Core_Intro.Country", "Country")
                        .WithMany("Artists")
                        .HasForeignKey("CountryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("EF_Core_Intro.Playlist", b =>
                {
                    b.HasOne("EF_Core_Intro.Category", "Category")
                        .WithMany("Playlists")
                        .HasForeignKey("CategoryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EF_Core_Intro.Category", b =>
                {
                    b.Navigation("Playlists");
                });

            modelBuilder.Entity("EF_Core_Intro.Country", b =>
                {
                    b.Navigation("Artists");
                });

            modelBuilder.Entity("EF_Core_Intro.Genre", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
